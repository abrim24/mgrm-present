q()
install.packages("knitr")
install.packages("rmarkdown")
q()
help(knitr::include_graphics)
library(knitr)
help("include_graphics")
install.package("Rcpp")
install.packages("Rcpp")
install.packages("ggplot2")
install.packages("doParallel")
q()
install.packages("rticles")
rmarkdown::draft("Jike.Rmd", template = "elsevier_article", package = "rticles")
rmarkdown::draft("Jack.Rmd", template = "elsevier_article", package = "rticles")
q()
knit_with_parameters('~/BFE/Strata/Strata-PhD-Summit-Jan2017/slides.Rmd')
f <- function(x) { value = 4 - 4*x^2; return (value)}
f(4)
help(runif)
M <- 10000
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
u <- runif(M)
plot(hist(u))
plot(density(u))
hist(u)
u
x <- f(u)
x
I <- sum(x)
I
mean(x)
I
I / <
I / M
library(knitr)
help(knitr::include_graphics)
help(include_graphics)
help(tseries)
library(tseries)
library(zoo)
x.Date <- as.Date(paste(2003, 02, c(1, 3, 7, 9, 14), sep = "-"))
## univariate plotting
x <- zoo(rnorm(5), x.Date)
x2 <- zoo(rnorm(5, sd = 0.2), x.Date)
plot(x)
lines(x2, col = 2)
x.Date
as.Date()
q()
dat.state <- read.table("MD_vardata.csv", sep=",", header=F)
dat.state <- read.table("ME_vardata.csv", sep=",", header=F)
dat.rps <- read.table("ME_dummies.csv", sep=",", header=F)
names(dat.state) <- c("Elec", "Inc", "Unemp")
names(dat.rps) <- c("RPS", "Crisis")
dat <- merge(dat.state, dat.rps)
head(dat)
tail(dat)
dat[85:95,]
dat.state <- read.table("MD_vardata.csv", sep=",", header=F)
dat.rps <- read.table("MD_dummies.csv", sep=",", header=F)
names(dat.state) <- c("Elec", "Inc", "Unemp")
names(dat.rps) <- c("RPS", "Crisis")
dat <- merge(dat.state, dat.rps)
head(dat)
tail(dat)
dat[85:95,]
coef(fit.var)
dat.state <- read.table("MD_vardata.csv", sep=",", header=F)
dat.rps <- read.table("MD_dummies.csv", sep=",", header=F)
names(dat.state) <- c("Elec", "Inc", "Unemp")
names(dat.rps) <- c("RPS", "Crisis")
dat <- merge(dat.state, dat.rps)
head(dat)
tail(dat)
dat[85:95,]
library(vars)
fit.var <- VAR(dat[,c("Elec", "Inc", "Unemp")], p = 3, type = "none", exogen = dat[,c("RPS", "Crisis")])
summary(fit.var)
coef(fit.var)
coef(fit.var)
coef(fit.var)$Unemp
coef(fit.var)$Unemp[[1]]
coef(fit.var)$Unemp[[10]]
dat.state <- read.table("MD_vardata.csv", sep=",", header=F)
dat.rps <- read.table("MD_dummies.csv", sep=",", header=F)
names(dat.state) <- c("Elec", "Inc", "Unemp")
names(dat.rps) <- c("RPS", "Crisis")
dat <- merge(dat.state, dat.rps)
head(dat)
tail(dat)
dat[85:95,]
library(vars)
fit.var <- VAR(dat[,c("Elec", "Inc", "Unemp")], p = 3, type = "none", exogen = dat[,c("RPS", "Crisis")])
summary(fit.var)
coef(fit.var)
amat <- Acoef(fit.var)
A1 <- amat[[1]]
A2 <- amat[[2]]
A3 <- amat[[3]]
B <- matrix(0, nrow=3, ncol=3)
B[1,1] <- coef(fit.var)$Elec[[10]]
B[2,2] <- coef(fit.var)$Inc[[10]]
B[3,3] <- coef(fit.var)$Unemp[[10]]
m <- 64
Y <- matrix(0, nrow=3, ncol=m)
Z <- matrix(1, nrow=3, ncol=1)
for(t in 5:64)
{
Y[,t] <- A1 %*% Y[,t-1] + A2 %*% Y[,t-2] + A3 %*% Y[,t-3] + B %*% Z
}
dm.ip <- Y[1,5:64]
plot(dm.ip, lwd = 3, type ="b", col="blue",
xlab="Time Steps Ahead", ylab="DM for IP", main = "Dynamic Multiplier for Industrial Production to RPS")
dm.ur <- Y[2,5:64]
plot(dm.ur, lwd = 3, type ="b", col="blue",
xlab="Time Steps Ahead", ylab="DM for UR", main = "Dynamic Multiplier for the Unemployment Rate to RPS")
dm.pi <- Y[3,5:64]
plot(dm.pi, lwd = 3, type ="b", col="blue",
xlab="Time Steps Ahead", ylab="DM for PI", main = "Dynamic Multiplier for Personal Income to RPS")
library(tseries)
library(tseries)
install.packages()
install.packages("tseries")
install.packages("tseries")
library(tseries)
help(adf.test)
y <- cumsum(rnorm(10000))
y
adf.test(y, k=0, alternative = "stationary")
adf.test(y, alternative = "stationary")
exit()
q()
devtools::use_rcpp()
devtools::use_rcpp()
install.packages("Rcpp")
devtools::use_rcpp
devtools::use_rcpp()
# Read in both raw datasets
dl.raw <- read.table("DL-Daily-Nearest.csv", sep=",", header=T)
bj.raw <- read.table("BJ-Daily-Nearest.csv", sep=",", header=T)
# Clean up cheese data
bj.tmp <- data.frame(date=bj.raw$tradingDay, cheese=bj.raw$close)
bj.tmp$date <- as.Date(bj.tmp$date)
#bj.tmp$cheese <- log(bj.tmp$cheese)
# Clean up milk data
dl.tmp <- data.frame(date=dl.raw$tradingDay, milk=dl.raw$close / 100)
dl.tmp$date <- as.Date(dl.tmp$date)
dl.tmp$milk <- dl.tmp / 10
# Merge the datasets into a single data frame
dat <- merge(dl.tmp, bj.tmp, by="date")
nr <- nrow(dat)
# De-seasonalize the prices
library(lubridate)
mos <- month(dat$date)
cal <- matrix(0, nrow=nr, ncol=12)
for(i in 1:12)
{
idx <- (mos == i)
cal[idx,i] <- 1
}
plot(bj.tmp$cheese, lwd=4, type="l", col="blue")
lines(dl.tmp$milk, lwd=4, type="l", col="green")
#dat.cal <- data.frame(cbind(dat$cheese, cal))
#names(dat.cal) <- c("cheese", "jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")
#fit <- lm(cheese ~ jan + feb + mar + apr + may + jun + jul + aug + sep + oct + nov + dec - 1, data = dat.cal)
#y <- fit$residuals
#plot(y, lwd=3, type="l", col="blue")
#lines(
# Read in both raw datasets
dl.raw <- read.table("DL-Daily-Nearest.csv", sep=",", header=T)
bj.raw <- read.table("BJ-Daily-Nearest.csv", sep=",", header=T)
# Clean up cheese data
bj.tmp <- data.frame(date=bj.raw$tradingDay, cheese=bj.raw$close)
bj.tmp$date <- as.Date(bj.tmp$date)
#bj.tmp$cheese <- log(bj.tmp$cheese)
# Clean up milk data
dl.tmp <- data.frame(date=dl.raw$tradingDay, milk=dl.raw$close / 100)
dl.tmp$date <- as.Date(dl.tmp$date)
dl.tmp$milk <- dl.tmp / 10
# Merge the datasets into a single data frame
dat <- merge(dl.tmp, bj.tmp, by="date")
nr <- nrow(dat)
# De-seasonalize the prices
library(lubridate)
mos <- month(dat$date)
cal <- matrix(0, nrow=nr, ncol=12)
for(i in 1:12)
{
idx <- (mos == i)
cal[idx,i] <- 1
}
plot(bj.tmp$cheese, lwd=4, type="l", col="blue")
lines(dl.tmp$milk, lwd=4, type="l", col="green")
#dat.cal <- data.frame(cbind(dat$cheese, cal))
#names(dat.cal) <- c("cheese", "jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")
#fit <- lm(cheese ~ jan + feb + mar + apr + may + jun + jul + aug + sep + oct + nov + dec - 1, data = dat.cal)
#y <- fit$residuals
#plot(y, lwd=3, type="l", col="blue")
#lines(
plot(bj.tmp$cheese, lwd=4, type="l", col="blue")
# Read in both raw datasets
dl.raw <- read.table("DL-Daily-Nearest.csv", sep=",", header=T)
bj.raw <- read.table("BJ-Daily-Nearest.csv", sep=",", header=T)
# Clean up cheese data
bj.tmp <- data.frame(date=bj.raw$tradingDay, cheese=bj.raw$close)
bj.tmp$date <- as.Date(bj.tmp$date)
#bj.tmp$cheese <- log(bj.tmp$cheese)
# Clean up milk data
dl.tmp <- data.frame(date=dl.raw$tradingDay, milk=dl.raw$close / 100)
dl.tmp$date <- as.Date(dl.tmp$date)
dl.tmp$milk <- dl.tmp / 10
# Merge the datasets into a single data frame
dat <- merge(dl.tmp, bj.tmp, by="date")
nr <- nrow(dat)
# De-seasonalize the prices
library(lubridate)
mos <- month(dat$date)
cal <- matrix(0, nrow=nr, ncol=12)
for(i in 1:12)
{
idx <- (mos == i)
cal[idx,i] <- 1
}
plot(bj.tmp$cheese, lwd=4, type="l", col="blue")
lines(dl.tmp$milk, lwd=4, type="l", col="green")
#dat.cal <- data.frame(cbind(dat$cheese, cal))
#names(dat.cal) <- c("cheese", "jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")
#fit <- lm(cheese ~ jan + feb + mar + apr + may + jun + jul + aug + sep + oct + nov + dec - 1, data = dat.cal)
#y <- fit$residuals
#plot(y, lwd=3, type="l", col="blue")
#lines(
setwd("/home/brough/USU/Research/Projects/local/MGRM/src/R")
dl.raw <- read.table("DL-Daily-Nearest.csv", sep=",", header=T)
bj.raw <- read.table("BJ-Daily-Nearest.csv", sep=",", header=T)
bj.tmp <- data.frame(date=bj.raw$tradingDay, cheese=bj.raw$close)
bj.tmp$date <- as.Date(bj.tmp$date)
dl.tmp <- data.frame(date=dl.raw$tradingDay, milk=dl.raw$close)
dl.tmp$date <- as.Date(dl.tmp$date)
dl.tmp$milk <- dl.tmp / 10
dl.tmp$milk <- dl.tmp$milk / 10
dat <- merge(dl.tmp, bj.tmp, by="date")
nr <- nrow(dat)
plot(bj.tmp$cheese, lwd=4, type="l", col="blue")
lines(dl.tmp$milk, lwd=4, type="l", col="green")
plot(bj.tmp$cheese, lwd=4, type="l", col="blue",ylim=c(0, 3))
lines(dl.tmp$milk, lwd=4, type="l", col="green")
# Set current working directory
setwd("/home/brough/USU/Research/Projects/local/MGRM/src/R")
# Read in both raw datasets
da.raw <- read.table("DA-Daily-Nearest.csv", sep=",", header=T)
dl.raw <- read.table("DL-Daily-Nearest.csv", sep=",", header=T)
bj.raw <- read.table("BJ-Daily-Nearest.csv", sep=",", header=T)
# Clean up cheese data
bj.tmp <- data.frame(date=bj.raw$tradingDay, cheese=bj.raw$close)
bj.tmp$date <- as.Date(bj.tmp$date)
#bj.tmp$cheese <- log(bj.tmp$cheese)
# Clean up milk data (DL -> "exchange")
dl.tmp <- data.frame(date=dl.raw$tradingDay, milk=dl.raw$close)
dl.tmp$date <- as.Date(dl.tmp$date)
dl.tmp$milk <- dl.tmp$milk / 10
# Clean up milk data (DA -> "pit")
da.tmp <- data.frame(date=da.tmp$tradingDay, prc=da.raw$close)
da.tmp$date <- as.Date(da.tmp$date)
da.tmp$prc <- da.tmp$prc / 10
# Merge the datasets into a single data frame
dat <- merge(dl.tmp, da.tmp, bj.tmp, by="date")
nr <- nrow(dat)
head(dat)
dat <- merge(dl.tmp, da.tmp, bj.tmp, by="date")
da.tmp <- data.frame(date=da.tmp$tradingDay, prc=da.raw$close)
da.tmp <- data.frame(date=da.raw$tradingDay, prc=da.raw$close)
da.tmp$date <- as.Date(da.tmp$date)
da.tmp$prc <- da.tmp$prc / 10
dat <- merge(dl.tmp, da.tmp, bj.tmp, by="date")
dat <- merge(dl.tmp, da.tmp, by="date")
dat <- merge(dat, bj.tmp, by="date")
head(dat)
tail(dat)
dat$basis <- dat$cheese - dat$milk
head(dat)
plot(dat$basis, lwd=3, type="l", col="red")
library(tseries)
adf.test(dat$basis)
plot(bj.tmp$cheese, lwd=4, type="l", col="blue",ylim=c(0, 3))
lines(dl.tmp$milk, lwd=4, type="l", col="green")
plot(dat$cheese, lwd=4, type="l", col="blue",ylim=c(0, 3))
lines(dat$milk, lwd=4, type="l", col="green")
lines(dat$basis, lwd=3, type="l", col="red")
dat.cal <- data.frame(cbind(dat$cheese, cal))
names(dat.cal) <- c("cheese", "jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")
fit <- lm(cheese ~ jan + feb + mar + apr + may + jun + jul + aug + sep + oct + nov + dec - 1, data = dat.cal)
y <- fit$residuals
plot(y, lwd=3, type="l", col="blue")
tail(dat.cal)
dat.cal <- data.frame(cbind(dat$cheese, cal))
library(lubridate)
mos <- month(dat$date)
cal <- matrix(0, nrow=nr, ncol=12)
for(i in 1:12)
{
idx <- (mos == i)
cal[idx,i] <- 1
}
cal
tail(cal)
dat.cal <- data.frame(cbind(dat$cheese, cal))
names(dat.cal) <- c("cheese", "jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")
fit <- lm(cheese ~ jan + feb + mar + apr + may + jun + jul + aug + sep + oct + nov + dec - 1, data = dat.cal)
y <- fit$residuals
plot(y, lwd=3, type="l", col="blue")
# Set current working directory
setwd("/home/brough/USU/Research/Projects/local/MGRM/src/R")
# Read in both raw datasets
da.raw <- read.table("DA-Daily-Nearest.csv", sep=",", header=T)
dl.raw <- read.table("DL-Daily-Nearest.csv", sep=",", header=T)
bj.raw <- read.table("BJ-Daily-Nearest.csv", sep=",", header=T)
# Clean up cheese data
bj.tmp <- data.frame(date=bj.raw$tradingDay, cheese=bj.raw$close)
bj.tmp$date <- as.Date(bj.tmp$date)
#bj.tmp$cheese <- log(bj.tmp$cheese)
# Clean up milk data (DL -> "exchange")
dl.tmp <- data.frame(date=dl.raw$tradingDay, milk=dl.raw$close)
dl.tmp$date <- as.Date(dl.tmp$date)
dl.tmp$milk <- dl.tmp$milk / 10
# Clean up milk data (DA -> "pit")
da.tmp <- data.frame(date=da.raw$tradingDay, prc=da.raw$close)
da.tmp$date <- as.Date(da.tmp$date)
da.tmp$prc <- da.tmp$prc / 10
# Merge the datasets into a single data frame
dat <- merge(dl.tmp, da.tmp, by="date")
dat <- merge(dat, bj.tmp, by="date")
dat$basis <- dat$cheese - dat$milk
nr <- nrow(dat)
# Plot
plot(dat$cheese, lwd=3, type="l", col="blue",ylim=c(0, 3))
lines(dat$milk, lwd=3, type="l", col="green")
lines(dat$basis, lwd=3, type="l", col="red")
